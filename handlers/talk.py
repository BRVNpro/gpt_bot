from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.fsm.context import FSMContext

from states.talk_states import TalkStates
from utils.prompts import load_prompt
from utils.chatgpt_instance import gpt  # ‚úÖ –Ω–æ–≤–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

router = Router()

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
CHARACTERS = {
    "cobain": ("–ö—É—Ä—Ç –ö–æ–±–µ–π–Ω üé∏", "talk_cobain.txt", "talk_cobain.jpg"),
    "queen": ("–ï–ª–∏–∑–∞–≤–µ—Ç–∞ II üëë", "talk_queen.txt", "talk_queen.jpg"),
    "tolkien": ("–î–∂–æ–Ω –¢–æ–ª–∫–∏–µ–Ω üìñ", "talk_tolkien.txt", "talk_tolkien.jpg"),
    "nietzsche": ("–§—Ä–∏–¥—Ä–∏—Ö –ù–∏—Ü—à–µ üß†", "talk_nietzsche.txt", "talk_nietzsche.jpg"),
    "hawking": ("–°—Ç–∏–≤–µ–Ω –•–æ–∫–∏–Ω–≥ üî¨", "talk_hawking.txt", "talk_hawking.jpg"),
}


@router.message(F.text == "/talk")
async def talk_start(message: Message, state: FSMContext):
    await state.set_state(TalkStates.selecting_character)

    image = FSInputFile("images/talk.jpg")
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=desc, callback_data=f"talk_{code}")]
        for code, (desc, _, _) in CHARACTERS.items()
    ])

    await message.answer_photo(image, caption="üë§ –í—ã–±–µ—Ä–∏ –ª–∏—á–Ω–æ—Å—Ç—å, —Å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å:", reply_markup=kb)


@router.callback_query(F.data == "talk")
async def talk_callback(callback: CallbackQuery, state: FSMContext):
    await talk_start(callback.message, state)


@router.callback_query(F.data.startswith("talk_"))
async def select_character(callback: CallbackQuery, state: FSMContext):
    char_code = callback.data.split("_")[1]
    char_info = CHARACTERS.get(char_code)

    if not char_info:
        return await callback.message.answer("‚ùó –õ–∏—á–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    char_name, prompt_file, image_file = char_info
    prompt_text = load_prompt(prompt_file)

    gpt.set_prompt(prompt_text)  # ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç
    await state.set_state(TalkStates.chatting)

    image = FSInputFile(f"images/{image_file}")
    await callback.message.answer_photo(
        image,
        caption=f"üó£ –¢—ã –≤—ã–±—Ä–∞–ª: {char_name}\n–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å, –∏ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å.",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="üîô –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="start")]]
        )
    )


@router.message(TalkStates.chatting)
async def talk_chat(message: Message, state: FSMContext):
    try:
        response = await gpt.add_message(message.text)  # ‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∏–∞–ª–æ–≥
        await message.answer(response)
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–∏–∞–ª–æ–≥–∞: {e}")
